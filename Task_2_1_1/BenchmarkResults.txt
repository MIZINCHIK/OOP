> Task :BenchRunner.main()
# JMH version: 1.36
# VM version: JDK 16.0.2, OpenJDK 64-Bit Server VM, 16.0.2+7-67
# VM invoker: C:\Users\mizin\.jdks\jdk-16.0.2\bin\java.exe
# VM options: -Dfile.encoding=windows-1251 -Duser.country=RU -Duser.language=ru -Duser.variant
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.mizinchik.BenchConcurrent.benchConsecutive

# Run progress: 0,00% complete, ETA 00:13:20
# Fork: 1 of 1
# Warmup Iteration   1: 159,902 ms/op
# Warmup Iteration   2: 173,578 ms/op
# Warmup Iteration   3: 189,347 ms/op
# Warmup Iteration   4: 198,828 ms/op
# Warmup Iteration   5: 193,476 ms/op
Iteration   1: 209,353 ms/op
Iteration   2: 193,076 ms/op
Iteration   3: 193,236 ms/op
Iteration   4: 193,325 ms/op
Iteration   5: 197,143 ms/op


Result "io.github.mizinchik.BenchConcurrent.benchConsecutive":
  197,227 �(99.9%) 26,915 ms/op [Average]
  (min, avg, max) = (193,076, 197,227, 209,353), stdev = 6,990
  CI (99.9%): [170,312, 224,141] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 16.0.2, OpenJDK 64-Bit Server VM, 16.0.2+7-67
# VM invoker: C:\Users\mizin\.jdks\jdk-16.0.2\bin\java.exe
# VM options: -Dfile.encoding=windows-1251 -Duser.country=RU -Duser.language=ru -Duser.variant
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.mizinchik.BenchConcurrent.benchStream

# Run progress: 12,50% complete, ETA 00:11:51
# Fork: 1 of 1
# Warmup Iteration   1: 67,430 ms/op
# Warmup Iteration   2: 57,092 ms/op
# Warmup Iteration   3: 59,219 ms/op
# Warmup Iteration   4: 55,957 ms/op
# Warmup Iteration   5: 63,750 ms/op
Iteration   1: 59,683 ms/op
Iteration   2: 59,603 ms/op
Iteration   3: 61,647 ms/op
Iteration   4: 59,922 ms/op
Iteration   5: 69,539 ms/op


Result "io.github.mizinchik.BenchConcurrent.benchStream":
  62,079 �(99.9%) 16,379 ms/op [Average]
  (min, avg, max) = (59,603, 62,079, 69,539), stdev = 4,253
  CI (99.9%): [45,700, 78,457] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 16.0.2, OpenJDK 64-Bit Server VM, 16.0.2+7-67
# VM invoker: C:\Users\mizin\.jdks\jdk-16.0.2\bin\java.exe
# VM options: -Dfile.encoding=windows-1251 -Duser.country=RU -Duser.language=ru -Duser.variant
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.mizinchik.BenchConcurrent.benchThread1

# Run progress: 25,00% complete, ETA 00:10:09
# Fork: 1 of 1
# Warmup Iteration   1: 189,458 ms/op
# Warmup Iteration   2: 185,706 ms/op
# Warmup Iteration   3: 180,831 ms/op
# Warmup Iteration   4: 185,296 ms/op
# Warmup Iteration   5: 189,805 ms/op
Iteration   1: 191,041 ms/op
Iteration   2: 188,620 ms/op
Iteration   3: 182,879 ms/op
Iteration   4: 191,386 ms/op
Iteration   5: 175,864 ms/op


Result "io.github.mizinchik.BenchConcurrent.benchThread1":
  185,958 �(99.9%) 25,379 ms/op [Average]
  (min, avg, max) = (175,864, 185,958, 191,386), stdev = 6,591
  CI (99.9%): [160,579, 211,337] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 16.0.2, OpenJDK 64-Bit Server VM, 16.0.2+7-67
# VM invoker: C:\Users\mizin\.jdks\jdk-16.0.2\bin\java.exe
# VM options: -Dfile.encoding=windows-1251 -Duser.country=RU -Duser.language=ru -Duser.variant
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.mizinchik.BenchConcurrent.benchThread16

# Run progress: 37,50% complete, ETA 00:08:28
# Fork: 1 of 1
# Warmup Iteration   1: 65,297 ms/op
# Warmup Iteration   2: 78,431 ms/op
# Warmup Iteration   3: 66,618 ms/op
# Warmup Iteration   4: 68,860 ms/op
# Warmup Iteration   5: 67,276 ms/op
Iteration   1: 69,111 ms/op
Iteration   2: 68,642 ms/op
Iteration   3: 69,512 ms/op
Iteration   4: 65,876 ms/op
Iteration   5: 64,303 ms/op


Result "io.github.mizinchik.BenchConcurrent.benchThread16":
  67,489 �(99.9%) 8,782 ms/op [Average]
  (min, avg, max) = (64,303, 67,489, 69,512), stdev = 2,281
  CI (99.9%): [58,707, 76,270] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 16.0.2, OpenJDK 64-Bit Server VM, 16.0.2+7-67
# VM invoker: C:\Users\mizin\.jdks\jdk-16.0.2\bin\java.exe
# VM options: -Dfile.encoding=windows-1251 -Duser.country=RU -Duser.language=ru -Duser.variant
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.mizinchik.BenchConcurrent.benchThread2

# Run progress: 50,00% complete, ETA 00:06:45
# Fork: 1 of 1
# Warmup Iteration   1: 110,695 ms/op
# Warmup Iteration   2: 110,466 ms/op
# Warmup Iteration   3: 111,038 ms/op
# Warmup Iteration   4: 126,759 ms/op
# Warmup Iteration   5: 116,429 ms/op
Iteration   1: 115,136 ms/op
Iteration   2: 109,992 ms/op
Iteration   3: 108,160 ms/op
Iteration   4: 110,385 ms/op
Iteration   5: 113,485 ms/op


Result "io.github.mizinchik.BenchConcurrent.benchThread2":
  111,432 �(99.9%) 10,859 ms/op [Average]
  (min, avg, max) = (108,160, 111,432, 115,136), stdev = 2,820
  CI (99.9%): [100,572, 122,291] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 16.0.2, OpenJDK 64-Bit Server VM, 16.0.2+7-67
# VM invoker: C:\Users\mizin\.jdks\jdk-16.0.2\bin\java.exe
# VM options: -Dfile.encoding=windows-1251 -Duser.country=RU -Duser.language=ru -Duser.variant
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.mizinchik.BenchConcurrent.benchThread3

# Run progress: 62,50% complete, ETA 00:05:04
# Fork: 1 of 1
# Warmup Iteration   1: 82,570 ms/op
# Warmup Iteration   2: 83,600 ms/op
# Warmup Iteration   3: 83,252 ms/op
# Warmup Iteration   4: 82,932 ms/op
# Warmup Iteration   5: 82,984 ms/op
Iteration   1: 81,946 ms/op
Iteration   2: 82,680 ms/op
Iteration   3: 82,229 ms/op
Iteration   4: 81,998 ms/op
Iteration   5: 88,049 ms/op


Result "io.github.mizinchik.BenchConcurrent.benchThread3":
  83,380 �(99.9%) 10,111 ms/op [Average]
  (min, avg, max) = (81,946, 83,380, 88,049), stdev = 2,626
  CI (99.9%): [73,270, 93,491] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 16.0.2, OpenJDK 64-Bit Server VM, 16.0.2+7-67
# VM invoker: C:\Users\mizin\.jdks\jdk-16.0.2\bin\java.exe
# VM options: -Dfile.encoding=windows-1251 -Duser.country=RU -Duser.language=ru -Duser.variant
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.mizinchik.BenchConcurrent.benchThread4

# Run progress: 75,00% complete, ETA 00:03:22
# Fork: 1 of 1
# Warmup Iteration   1: 74,094 ms/op
# Warmup Iteration   2: 71,529 ms/op
# Warmup Iteration   3: 70,640 ms/op
# Warmup Iteration   4: 70,660 ms/op
# Warmup Iteration   5: 69,530 ms/op
Iteration   1: 69,137 ms/op
Iteration   2: 68,168 ms/op
Iteration   3: 70,170 ms/op
Iteration   4: 70,754 ms/op
Iteration   5: 69,859 ms/op


Result "io.github.mizinchik.BenchConcurrent.benchThread4":
  69,618 �(99.9%) 3,844 ms/op [Average]
  (min, avg, max) = (68,168, 69,618, 70,754), stdev = 0,998
  CI (99.9%): [65,774, 73,461] (assumes normal distribution)


# JMH version: 1.36
# VM version: JDK 16.0.2, OpenJDK 64-Bit Server VM, 16.0.2+7-67
# VM invoker: C:\Users\mizin\.jdks\jdk-16.0.2\bin\java.exe
# VM options: -Dfile.encoding=windows-1251 -Duser.country=RU -Duser.language=ru -Duser.variant
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.mizinchik.BenchConcurrent.benchThread8

# Run progress: 87,50% complete, ETA 00:01:41
# Fork: 1 of 1
# Warmup Iteration   1: 62,987 ms/op
# Warmup Iteration   2: 63,662 ms/op
# Warmup Iteration   3: 62,421 ms/op
# Warmup Iteration   4: 64,176 ms/op
# Warmup Iteration   5: 66,668 ms/op
Iteration   1: 66,338 ms/op
Iteration   2: 63,778 ms/op
Iteration   3: 65,813 ms/op
Iteration   4: 70,934 ms/op
Iteration   5: 68,676 ms/op


Result "io.github.mizinchik.BenchConcurrent.benchThread8":
  67,108 �(99.9%) 10,625 ms/op [Average]
  (min, avg, max) = (63,778, 67,108, 70,934), stdev = 2,759
  CI (99.9%): [56,483, 77,733] (assumes normal distribution)


# Run complete. Total time: 00:13:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                         Mode  Cnt    Score    Error  Units
BenchConcurrent.benchConsecutive  avgt    5  197,227 � 26,915  ms/op
BenchConcurrent.benchStream       avgt    5   62,079 � 16,379  ms/op
BenchConcurrent.benchThread1      avgt    5  185,958 � 25,379  ms/op
BenchConcurrent.benchThread16     avgt    5   67,489 �  8,782  ms/op
BenchConcurrent.benchThread2      avgt    5  111,432 � 10,859  ms/op
BenchConcurrent.benchThread3      avgt    5   83,380 � 10,111  ms/op
BenchConcurrent.benchThread4      avgt    5   69,618 �  3,844  ms/op
BenchConcurrent.benchThread8      avgt    5   67,108 � 10,625  ms/op
